public void newButton() {
    TestUtils.sleep(2000);
    Assert.assertTrue(isElementPresent(NewButton), "New button is not present");
    NewButton.click();
}

public void NewHead() {
    TestUtils.sleep(1000);
    Assert.assertTrue(isElementPresent(NewLeadHeader), "New Header is not present");
}

public void BusinessProfile() {
    WebElement element = ScrollBusiness;
    JavascriptExecutor js = (JavascriptExecutor) driver;
    js.executeScript("arguments[0].scrollIntoView();", element);
    Assert.assertTrue(isElementPresent(ScrollBusiness), "Business Profile Header is not present");
}

public void Assigne() {
    WebElement element = scrollAssign;
    JavascriptExecutor js = (JavascriptExecutor) driver;
    js.executeScript("arguments[0].scrollIntoView();", element);
    Assert.assertTrue(isElementPresent(scrollAssign), "Assign is not present");
}

public void External() {
    WebElement element = scrollAssign;
    JavascriptExecutor js = (JavascriptExecutor) driver;
    js.executeScript("arguments[0].scrollIntoView();", element);
    ExtRecNam.click();
    ExtRecNamSel.click();
    TestUtils.sleep(1000);
}

public void Internal() {
    Assert.assertTrue(isElementPresent(IntRecNam), "Internal Receiver Name is not present");
    IntRecNam.click();
    IntRecNamSel.click();
    TestUtils.sleep(1000);
}

public void wealth() {
    AWMFirmDrop.click();
    dropOsaic.click();
    TestUtils.sleep(1000);
}

public void recLead() {
    WebElement element = RecleSource;
    JavascriptExecutor js = (JavascriptExecutor) driver;
    js.executeScript("arguments[0].scrollIntoView();", element);
    RecleSource.click();
    LeadMarket.click();
    TestUtils.sleep(1000);
}

public void curPrac() {
    WebElement element = CurPraDrop;
    JavascriptExecutor js = (JavascriptExecutor) driver;
    js.executeScript("arguments[0].scrollIntoView();", element);
    CurPraDrop.click();
    SoloSel.click();
    TestUtils.sleep(1000);
}

public void finSave() {
    saveButton.click();
}

public void toaster() {
    TestUtils.explicit_locate(NewLeadToast);
    Assert.assertTrue(isElementPresent(NewLeadToast), "Toaster is not present");
}

public void leadPageHead() {
    TestUtils.sleep(2000);
    Assert.assertTrue(isElementPresent(ConveLeButton), "Lead Header is not present");
}

public void ClickLead() {
    TestUtils.sleep(4000);
    ConveLeButton.click();
}

public void convertHead() {
    TestUtils.sleep(4000);
    Assert.assertTrue(isElementPresent(convertHeader), "Convert Header is not present");
}

public void finaConvert() {
    TestUtils.sleep(4000);
    finalConvert.click();
}

public void FinalHeader() {
    TestUtils.explicit_locate(ConvertMessage);
    TestUtils.sleep(2000);
    Assert.assertTrue(isElementPresent(ConvertMessage), "Convert Message is not present");
    TestUtils.sleep(2000);
}
