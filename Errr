package cucumberutils;

import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.stream.Stream;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterTest;

import io.cucumber.core.gherkin.Feature;
import io.cucumber.java.After;
import io.cucumber.java.AfterStep;
import io.cucumber.java.Before;
import io.cucumber.java.Scenario;
import utility.Azureutils;
import webpages.GenericPageObjects;

import com.codoid.products.exception.FilloException;

import BaseClass.ScreenShot;
import datadriven.data;
import datadriven.datatrial;
import datadriven.hashdatafromexcel;



//public class Hooks extends map_scenario_to_excel_row {	
public class Hooks extends tcid {
	public Scenario scenario;
	public String tctagname;
	public String path="";
	@Before
	public void before(Scenario scenario) throws IOException, FilloException {
		
		
		System.out.println("hooks");
		System.out.println("--------------------------B--------------------------------------------");
		String currentexampletcid;
		String ATcid = null;
		String firstsheetName;
		String secondsheetName=null;
		
		this.scenario = scenario;
		
		Collection<String>taglist=scenario.getSourceTagNames();
		for (String tag: taglist) {
			if (tag.contains("tc")) {
			String[] tags=tag.split(":");	
			tctagname=tags[1];
			}		
		}
		
		//System.out.println(scenario.);
		//System.out.println();
		System.out.println("TcTagname:"+tctagname);
		
		URI featurefilepathraw= scenario.getUri();
		System.out.println("featurefilepathraw:"+featurefilepathraw.toString());
		String featurefilepathasstring = featurefilepathraw.toString();
		String[] featurefilepatharray= featurefilepathasstring.split(":///");
		String featurefilepath= featurefilepatharray[1];
		System.out.print("\nfeaturefilepath: " + featurefilepath); 
		path= Paths.get(featurefilepath).toAbsolutePath().toString();
		try (Stream<String> lines = Files.lines(Paths.get(path))){			    
			 Integer currentscenario = scenario.getLine();			 
			 int examplelinenumber =currentscenario;
			 System.out.print("\ncurrentline: " + examplelinenumber);
			 //System.out.println("print next line number : "+lines.skip(examplelinenumber).findFirst().get());
			 String currentexamplelinenumber = lines.skip(examplelinenumber-1).findFirst().get();
			 System.out.print("\ncurrentexamplelinenumber: " + currentexamplelinenumber);
			 currentexamplelinenumber.replaceAll("\\s","");
			 String[] testdata= currentexamplelinenumber.split("\\|");
			currentexampletcid= testdata[1];
			System.out.print("\ncurrentexampletcid: " + currentexampletcid);
			firstsheetName= testdata[2];
			System.out.print("\ncurrentexampletcid: " + firstsheetName);
			
			if(testdata.length > 3)
			{
			ATcid= testdata[3];
			System.out.print("\ncurrentexampletcid: " + ATcid);
			secondsheetName= testdata[4];
			System.out.print("\ncurrentexampletcid: " + secondsheetName);
			}
			
			
		}	
		Testcaseid.set(currentexampletcid);
		
	
		
		if(featurefilepath.contains("API_Features")) {
		//hashdatafromexcel hashdatafromexcelcreate = new hashdatafromexcel();
		//hashdatafromexcelcreate.createhashmapfromexcel(currentexampletcid,"TestData_QA","CRM2_API");
		}
		
		hashdatafromexcel hashdatafromexcelcreate = new hashdatafromexcel();
		  if(System.getProperty("env").equals("QA")){
			  //hashdatafromexcelcreate.createhashmapfromexcel(currentexampletcid,ATcid,"TestData_QA",firstsheetName,secondsheetName);
		  }
		    else if(System.getProperty("env").equals("PROD"))
		    {
		    	hashdatafromexcelcreate.createhashmapfromexcel(currentexampletcid,ATcid,"TestData_PROD",firstsheetName,secondsheetName);
		    	}
		    else if(System.getProperty("env").equals("DEV")) {
		    	hashdatafromexcelcreate.createhashmapfromexcel(currentexampletcid,ATcid,"TestData_DEV",firstsheetName,secondsheetName);
		    }
		
				//hashdatafromexcelcreate.createhashmapfromexcel(currentexampletcid,"TestData_BOQA",sheetName);
				 
		
		/*datatrial datcreate = new datatrial();
		  datcreate.createhashmap(currentexampletcid);*/
		  
		  
		 /* String numberofaccounts = data.getTestValue("no_of_accounts", currentexampletcid);
			 String numberofgoals = data.getTestValue("no_of_goals", currentexampletcid);
			 String totnumofacc=numberofaccounts;
			 System.out.println("totnumofacc:"+totnumofacc);
			 List<String> accounts_to_add = Arrays.asList(totnumofacc.split(","));
			 if(!numberofaccounts.equals("")){
		  
		  for(String accountnumloop:accounts_to_add){
				//String tcidmul=data.getTestValue("TCID", accountnumloop) ;
			  if(!accountnumloop.equals(currentexampletcid)){
				 datatrial datcreatemultiple = new datatrial();
				  datcreatemultiple.createhashmap(accountnumloop);
			  }
		  }
			  
			}*/
			 //String Execution_Server=data.getTestValue("Execution_Server", currentexampletcid);
		String Execution_Server="";	 
		if(!featurefilepath.contains("API_Features")) {
		Driverselector driverselector = new Driverselector();
			 	if (Execution_Server.equalsIgnoreCase("Sauce")) {
			 		driverselector.selectBrowser("SAUCE", "CHROME");
			 	}else {
			 		driverselector.selectBrowser("LOCAL", "CHROME");
			 	}
		}
		
	}
	

	@AfterStep
	public void aftertestScenario(Scenario scenario) throws FilloException, IOException, InterruptedException {
		 scenario.attach(screenshot.getByteScreenshot(), "image/png",scenario.getName());
}

	@After
	public void afterScenario(Scenario scenario) throws FilloException, IOException, InterruptedException {
	    System.out.println("-----------------JUA-------------");
	    System.out.println(scenario.getName() + " Status - " + scenario.getStatus());
	    String status=scenario.getStatus().toString();
	    String planid="";
	    String userstory="";
	    String azuretestcaseid="";
	    
	 
	    Collection<String>taglist=scenario.getSourceTagNames();
		for (String tag: taglist) {
			if (tag.contains("tp")) {
			String[] tags=tag.split(":");	
			planid=tags[1];
			}else if(tag.contains("tc")) {
				String[] tags=tag.split(":");	
				azuretestcaseid=tags[1];
			}else if(tag.contains("us")) {
				String[] tags=tag.split(":");	
				userstory=tags[1];
			}
			
		}
		if(scenario.isFailed())
		    {			
		        scenario.attach(screenshot.getByteScreenshot(), "image/png", scenario.getName());
		   }
		    
		/*
		 * Stream<String> lines = Files.lines(Paths.get(path)); Integer currentscenario
		 * = scenario.getLine(); int examplelinenumber =currentscenario; String
		 * isendofscenariooutline=lines.skip(examplelinenumber).findFirst().get();
		 * if(!isendofscenariooutline.contains("|")) {
		 * 
		 * 
		 * System.out.println(planid); System.out.println(userstory);
		 * System.out.println(azuretestcaseid); System.out.println(status);
		 * 
		 * //Azureutils.update_results_in_azure_devops(planid,userstory,azuretestcaseid,
		 * status); }
		 */
				
		    	
		    
			 
		
	    
			
	   
	   
	    
	    //String tcid =Testcaseid1;
	   /* String Tcid = tcid.getqry();
	    
	    WebDriver driver= Driverselector.drivers.get();
	   resultupdate excelresult = new resultupdate();
	   String sstatus = scenario.getStatus().toString();
	   System.out.println("------------------------------"+Tcid+sstatus);
	  if (sstatus.equals("PASSED")){
		  excelresult.updateexcel("Result", "Passed", Tcid);
		  
	  }
	 Date now1 = new Date();
		SimpleDateFormat dateFormat = new SimpleDateFormat("dd_MM_YY_hh_mm_ss");
		String time1 = dateFormat.format(now1);
	   String sfailname = data.getTestValue("TCID", Tcid)+"_"+data.getTestValue("recir_acctyp", Tcid)+"_"+
			     data.getTestValue("accsetsrt_regtype", Tcid)+"_"+
			     data.getTestValue("recir_program", Tcid)+time1+"_Fail";
	    if(scenario.isFailed()) {
	    	
	    	
	    	if(!data.getTestValue("accsetsrt_regtype", Tcid).equals("UGMA/UTMA")) {
				  scs.fsfail(driver, sfailname);
				  }else{
					  String sfailnames = Tcid+"_"+data.getTestValue("recir_acctyp",Tcid)+"_UGMA_UTMA_"+
							  data.getTestValue("Recir_program",Tcid);
					  scs.fsfail(driver, sfailnames);
				  }
	    	
			   excelresult.updateexcel("Result", "Failed", Tcid);
			   Path path = Paths.get("screenshot/Fail/"+sfailname+".png");
			    byte[] data = Files.readAllBytes(path);
			    File file = new File("screenshot/Fail/"+sfailname+".png");
			  scenario.getId();
			    		 //  scenario.embed(Files.readAllBytes(file.toPath()), "Failure_Screenshot");
			    		   scenario.embed(data, "image/png", "Failure_Screenshot");
			    		   //scenario.attach(data, "application/vnd.ms-excel", "Failure_Screenshot");
	    	
			  }
			  
	     
	    int closebrowser =Integer.parseInt(System.getProperty("closebrowser"));
		if(closebrowser==1) {	  
	    driver.quit(); 	
		}*/
	         
			  
	    	
	    }
	
	  // String qry="Select * from Sheet1 where TCID='"+Testcaseid+"'";
	   /* String scstatus = scenario.getStatus().toString();
		 Path path = Paths.get("Result/resultsheet.xlsx");
	    byte[] data = Files.readAllBytes(path);
	    File file = new File("Result/resultsheet.xlsx");
	  scenario.getId();
	    		   //scenario.embed(Files.readAllBytes(file.toPath()));
	    		   scenario.attach(data, "application/vnd.ms-excel", "name.xlsx");*/
	   
	    		   //feature.
	    		  
	    	
	   // excelresult.updateexcel("Result",scstatus , qry);
	
		
	
	
	
	
}

