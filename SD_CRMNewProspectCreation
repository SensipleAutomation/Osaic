package seleniumgluecode;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;

import cucumberutils.Driverselector;
import io.cucumber.java.en.Given;
import utility.TestUtils;
import webpages.CasesApprovalAndClosing;
import webpages.EO_CRM_NewProspectCreation;
import webpages.EO_UploadDocumentsPage;
import webpages.loginpage;

public class SD_CRMNewProspectCreation {

	WebDriver driver = Driverselector.drivers.get();
	loginpage lpage = new loginpage(driver);
	EO_CRM_NewProspectCreation crm = new EO_CRM_NewProspectCreation(driver);
	CasesApprovalAndClosing cac = new CasesApprovalAndClosing(driver);
	EO_UploadDocumentsPage upl = new EO_UploadDocumentsPage(driver);
	String originalWindowHandle = driver.getWindowHandle();

	@Given("^user login the CRM Application with credentials \"([^\"]*)\" and \"([^\"]*)\"$")
	public void user_login_the_CRM_Application_with_credentials_and(String user, String password) throws Throwable {
		lpage.loginToCRM();
		crm.loginToCRM(user, password);
	}

	@Given("^user should be redirected to the homepage of CRM Application$")
	public void user_should_be_redirected_to_the_homepage_of_CRM_Application() throws Throwable {
		crm.dashboard();
	}

	@Given("^User select the Business Development and leads$")
	public void user_select_the_Business_Development_and_leads() throws Throwable {
		crm.BusinessDevolpment();
		crm.Lead();
	}

	@Given("^User Verifies whether the New Button is available and click$")
	public void user_Verifies_whether_the_New_Button_is_available_and_click() throws Throwable {
		crm.newButton();

	}

	@Given("^User Validate the NewLead Header is present$")
	public void user_Validate_the_NewLead_Header_is_present() throws Throwable {
		crm.NewHead();
	}

	@Given("user enters {string}, {string}, {string}, {string}, {string}")
	public void user_enters(String First, String Last, String finra, String nam, String bran) {
		crm.firstLast(First, Last);
		crm.mobEmail();
		crm.recLead();
		crm.finra(finra);
		crm.businessNameDBA(nam);
		crm.businessBranchName(bran);
		crm.External();
		crm.Internal();
		crm.curPrac();
	}

	@Given("^user click on Save Button$")
	public void user_click_on_Save_Button() throws Throwable {
		crm.finSave();
	}

	@Given("^User Validate the Success message Toaster$")
	public void user_Validate_the_Success_message_Toaster() throws Throwable {
		crm.toaster();
	}

	@Given("^User click on convert lead button$")
	public void user_click_on_convert_lead_button() throws Throwable {
		crm.ClickLead();
	}

	@Given("^User click on convert button$")
	public void user_click_on_convert_button() throws Throwable {
		crm.convertHead();
		crm.finaConvert();
	}

	@Given("^user validate the PopupMessage popup message$")
	public void user_validate_the_PopupMessage_popup_message() throws Throwable {

		crm.oppTab();
		crm.leadToaster();
	}

	@Given("^user fill the form in opportunites page with \"([^\"]*)\"$")
	public void user_fill_the_form_in_opportunites_page_with(String value) throws Throwable {
//		crm.wealth();
		crm.contactEdit();
		crm.channel();
		crm.values(value);
		crm.homeSelect();
	}

	@Given("^user click on invite button and validate the toaster$")
	public void user_click_on_invite_button_and_validate_the_toaster() throws Throwable {
		crm.inviteBut();
		crm.invite();

	}

	@Given("^user validate that the external id is generated$")
	public void user_validate_that_the_external_id_is_generated() throws Throwable {
		crm.ext();
		cac.copymail();
		TestUtils.sleep(1500);
//		cac.mailCopied();

	}

	@Given("^User open new window and login with newly created prospect$")
	public void user_open_new_window_and_login_with_newly_created_prospect() throws Throwable {

		((JavascriptExecutor) driver).executeScript("window.open()");
		for (String handle : driver.getWindowHandles()) {
			driver.switchTo().window(handle);
		}
		lpage.loginToEO();
		TestUtils.sleep(1500);
		cac.logmail();

	}

	@Given("^user click login button after passing \"([^\"]*)\"$")
	public void user_click_login_button_after_passing(String Password) throws Throwable {
		cac.loginToEO(Password);

	}

//	@Given("^User delete the Created prospect and validate the toaster$")
//	public void user_delete_the_Created_prospect_and_validate_the_toaster() throws Throwable {
////		crm.DeleteProspect();
////
////		crm.cases();
//
//	}
//
//	@Given("^User search for the prospect and delete the created user$")
//	public void user_search_for_the_prospect_and_delete_the_created_user() throws Throwable {
////		crm.Select();
//
//	}

	@Given("^user validate welcome board and click on Learn Module complete button$")
	public void user_validate_welcome_board_and_click_on_Learn_Module_complete_button() throws Throwable {
		cac.overview();
		cac.learnComplete();
	}

	@Given("^User enter the Personal Information \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\"$")
	public void user_enter_the_Personal_Information_and_and_and_and(String DOB, String ssn, String Address, String city,
			String zip) throws Throwable {

		cac.personalInformation(DOB, ssn, Address, city, zip);

	}

	@Given("^user enter business Information \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\"$")
	public void user_enter_business_Information_and_and_and_and(String current, String address, String city, String zip,
			String phone) throws Throwable {
		cac.BusinessInformation(current, address, city, zip, phone);
		cac.affiliationQuestion();

	}

	@Given("^user enter values in transition assistance \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\" and \"([^\"]*)\"$")
	public void user_enter_values_in_transition_assistance_and_and_and(String Total, String Split, String Tot,
			String Spl) throws Throwable {
		cac.revenue(Total, Split);
		cac.AssestsAccounts(Tot, Spl);
		cac.topProducts();
		TestUtils.sleep(4000);
		driver.switchTo().window(originalWindowHandle);
		TestUtils.sleep(2000);
		cac.crmApprovals();

	}

	@Given("^user complete the learn module with name \"([^\"]*)\"$")
	public void user_complete_the_learn_module_with_name(String value) throws Throwable {
		cac.processing(value);
		driver.switchTo().window((String) driver.getWindowHandles().toArray()[1]);
//		driver.navigate().refresh();
		cac.preliminary();
		cac.uploadGDCDoc(value);
		TestUtils.sleep(2000);
		cac.clickNobutton(value);
		cac.faircreditCheck();
		cac.backConsent(value);
		cac.outsideBusiness();
		TestUtils.sleep(1000);
		driver.switchTo().window((String) driver.getWindowHandles().toArray()[1]);
		TestUtils.sleep(2000);
		cac.markTaskCompleted.click();
		cac.backgroungContinue.click();
	}

	@Given("user closes the cases and comment as {string}")
	public void user_closes_the_cases_and_comment_as(String value) {

//		driver.switchTo().window((String) driver.getWindowHandles().toArray()[0]);
//		TestUtils.sleep(2000);
//		cac.scheduleFind();
//		cac.reviewCases();

	}
}
